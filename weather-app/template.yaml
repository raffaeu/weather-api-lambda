# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  weather-app

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
- AWS::Serverless-2016-10-31

Parameters:
  apiKey:
    Type: String
    Description: The API_KEY used to retrieve weather APIs
    Default: 'no-value'

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: get-all-items.js
  getCities:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-cities.getCities
      Runtime: nodejs16.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Retrieve a list of Cities based on a filter.
      Events:
        Api:
          Type: Api
          Properties:
            Path: /getCities
            Method: GET
      Environment:
        Variables:
          API_KEY: !Ref apiKey
  getWeather:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-weather.getWeather
      Runtime: nodejs16.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Retrieve a 3 days weather based on a filter.
      Events:
        Api:
          Type: Api
          Properties:
            Path: /getWeather
            Method: GET
      Environment:
        Variables:
          API_KEY: !Ref apiKey
Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
